# app/openapi.yml
openapi: 3.0.4
info:
  version: 1.0.0
  title: Sports Betting Calculator API
  description: API for calculating sports betting outcomes including payouts, stakes, odds, and effective odds after fees.
servers:
  - url: http://localhost:5000
    description: Local development server

paths:
  /:
    get:
      summary: API Information
      description: Returns basic information about the API including name, version, endpoints, and usage instructions.
      responses:
        '200':
          description: Successful response with API details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "Sports Betting Calculator API"
                  version:
                    type: string
                    example: "1.0.0"
                  endpoints:
                    type: object
                    additionalProperties:
                      type: string
                  usage:
                    type: string

  /calculate/payout:
    post:
      summary: Calculate Payout
      description: Calculate the potential payout and profit for a bet given the odds and stake.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - odds
                - stake
              properties:
                odds:
                  type: string
                  pattern: '^[+-]?[1-9]+\d{2,}$'
                  description: American odds string (e.g., "+150", "-200")
                  example: "+150"
                stake:
                  type: number
                  description: Amount wagered in dollars
                  example: 100.0
      responses:
        '200':
          description: Successful payout calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Calculate Payout
      description: Calculate the potential payout for a bet given the odds and stake.
      parameters:
        - name: odds
          in: query
          required: true
          schema:
            type: string
            pattern: '^[+-]?[1-9]+\d{2,}$'
            description: American odds string (e.g., "+150", "-200")
            example: "+150"
        - name: stake
          in: query
          required: true
          schema:
            type: number
            description: Amount wagered in dollars
            example: 100.0
      responses:
        '200':
          description: Successful payout calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /calculate/stake:
    post:
      summary: Calculate Stake
      description: Calculate the stake required to achieve a desired payout at given odds.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - odds
                - payout
              properties:
                odds:
                  type: string
                  pattern: '^[+-]?[1-9]+\d{2,}$'
                  description: American odds string (e.g., "+150", "-200")
                  example: "+150"
                payout:
                  type: number
                  description: Desired total payout in dollars
                  example: 250.0
      responses:
        '200':
          description: Successful stake calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Calculate Stake
      description: Calculate the stake required to achieve a desired payout at given odds.
      parameters:
        - name: odds
          in: query
          required: true
          schema:
            type: string
            pattern: '^[+-]?[1-9]+\d{2,}$'
            description: American odds string (e.g., "+150", "-200")
            example: "+150"
        - name: payout
          in: query
          required: true
          schema:
            type: number
            description: Desired total payout in dollars
            example: 250.0
      responses:
        '200':
          description: Successful stake calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /calculate/odds:
    post:
      summary: Calculate Odds
      description: Calculate the odds required to achieve a desired payout with a given stake.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - stake
                - payout
              properties:
                stake:
                  type: number
                  description: Amount to be wagered in dollars
                  example: 100.0
                payout:
                  type: number
                  description: Desired total payout in dollars
                  example: 250.0
      responses:
        '200':
          description: Successful odds calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Calculate Odds
      description: Calculate the odds required to achieve a desired payout with a given stake.
      parameters:
        - name: stake
          in: query
          required: true
          schema:
            type: number
            description: Amount to be wagered in dollars
            example: 100.0
        - name: payout
          in: query
          required: true
          schema:
            type: number
            description: Desired total payout in dollars
            example: 250.0
      responses:
        '200':
          description: Successful odds calculation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardCalculationResponse'
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /calculate/effective_odds:
    post:
      summary: Calculate Effective Odds
      description: Calculate the effective odds after adjusting for a percentage fee on the profit.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - odds
              properties:
                odds:
                  type: string
                  description: American odds string (e.g., "+150", "-200")
                  pattern: '^[+-]?[1-9]+\d{2,}$'
                  example: "+150"
                fee:
                  type: number
                  description: Percentage fee on profit as a decimal (e.g., 0.03 for 3%). Defaults to 0.03.
                  example: 0.03
      responses:
        '200':
          description: Successful effective odds calculation
          content:
            application/json:
              schema:
                type: object
                properties:
                  effective_odds:
                    type: string
                    description: Effective American odds string after fee adjustment
                    example: "+146"
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Calculate Effective Odds
      description: Calculate the effective odds after adjusting for a percentage fee on the profit.
      parameters:
        - name: odds
          in: query
          required: true
          schema:
            type: string
            description: American odds string (e.g., "+150", "-200")
            pattern: '^[+-]?[1-9]+\d{2,}$'
            example: "+150"
        - name: fee
          in: query
          required: false
          schema:
            type: number
            description: Percentage fee on profit as a decimal (e.g., 0.03 for 3%). Defaults to 0.03.
            example: 0.03
      responses:
        '200':
          description: Successful effective odds calculation
          content:
            application/json:
              schema:
                type: object
                properties:
                  effective_odds:
                    type: string
                    description: Effective American odds string after fee adjustment
                    example: "+146"
        '400':
          description: Invalid input or calculation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /fetch/expert-picks:
    post:
      summary: Fetch Expert Picks
      description: Fetch expert picks data from SportsLine API by calling the bash script.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - expert
              properties:
                expert:
                  type: string
                  description: The unique identifier for the expert
                  example: "50774572"
                leagues:
                  type: string
                  description: Comma-separated list of leagues to filter by
                  example: "NFL,NBA,MLB"
                after:
                  type: string
                  description: Base64 encoded cursor for pagination
                  example: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcxMTAtUFJPUC1GSVJTVF81X0lOTklOR1NfSEFORElDQVAiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTlUMTc6MDVaIn0="
                count:
                  type: integer
                  description: Number of picks to fetch (default=10, max=25)
                  minimum: 1
                  maximum: 25
                  example: 10
      responses:
        '200':
          description: Successful expert picks data retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpertPicksResponse'
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Script execution error or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Fetch Expert Picks
      description: Fetch expert picks data from SportsLine API by calling the bash script.
      parameters:
        - name: expert
          in: query
          required: true
          schema:
            type: string
            description: The unique identifier for the expert
            example: "50774572"
        - name: leagues
          in: query
          required: false
          schema:
            type: string
            description: Comma-separated list of leagues to filter by
            example: "NFL,NBA,MLB"
        - name: after
          in: query
          required: false
          schema:
            type: string
            description: Base64 encoded cursor for pagination
            example: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcxMTAtUFJPUC1GSVJTVF81X0lOTklOR1NfSEFORElDQVAiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTlUMTc6MDVaIn0="
        - name: count
          in: query
          required: false
          schema:
            type: integer
            description: Number of picks to fetch (default=10, max=25)
            minimum: 1
            maximum: 25
            example: 10
      responses:
        '200':
          description: Successful expert picks data retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpertPicksResponse'
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Script execution error or internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong
      example:
        error: "Invalid odds format"

    StandardCalculationResponse:
      type: object
      properties:
        odds:
          type: string
          description: American odds string
          example: "+150"
        stake:
          type: number
          description: Original stake amount
          example: 100.0
        payout:
          type: number
          description: Total payout
          example: 250.0
        profit:
          type: number
          description: Expected profit
          example: 150.0

    ExpertPicksResponse:
      type: object
      description: Response containing expert picks data from SportsLine API
      properties:
        data:
          type: object
          description: The main data container
          properties:
            expertPicks:
              type: object
              description: Expert picks data container
              properties:
                __typename:
                  type: string
                  description: GraphQL type name
                  example: "ExpertPicksConnection"
                totalCount:
                  type: integer
                  description: Total number of picks available
                  example: 3227
                pageInfo:
                  type: object
                  description: Pagination information
                  properties:
                    startCursor:
                      type: string
                      description: Base64 encoded cursor for the first item
                      example: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcxMTAtUFJPUC1GSVJTVF81X0lOTklOR1NfSEFORElDQVAiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTlUMTc6MDVaIn0="
                    endCursor:
                      type: string
                      description: Base64 encoded cursor for the last item
                      example: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcwNTgtUFJPUC1UT1RBTF9ISVRTLTI3Njg1NTEiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTdUMjI6NDVaIn0="
                    hasNextPage:
                      type: boolean
                      description: Whether there are more pages available
                      example: true
                    __typename:
                      type: string
                      description: GraphQL type name
                      example: "PageInfo"
                edges:
                  type: array
                  description: Array of expert pick edges containing the actual pick data
                  items:
                    type: object
                    description: Individual expert pick edge
                    properties:
                      cursor:
                        type: string
                        description: Base64 encoded cursor for this item
                        example: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcxMTAtUFJPUC1GSVJTVF81X0lOTklOR1NfSEFORElDQVAiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTlUMTc6MDVaIn0="
                      node:
                        type: object
                        description: The actual expert pick data
                        properties:
                          id:
                            type: string
                            description: Unique identifier for the pick
                            example: "67f46a17-1c1f-4eb0-8260-3c01c5d8ea54-29637090-MONEY_LINE"
                          resultStatus:
                            type: string
                            description: Result of the pick (Win, Loss, Push, Void)
                            example: "Loss"
                          unit:
                            type: number
                            description: Unit size for the bet
                            example: 1
                          writeup:
                            type: string
                            description: Expert's analysis and reasoning
                            example: "I believe the Nats are playing for Manager Dave Martinez's job today..."
                          sportsbookName:
                            type: string
                            description: Name of the sportsbook
                            example: "DraftKings"
                          game:
                            type: object
                            description: Game information
                            properties:
                              id:
                                type: string
                                description: Game identifier
                                example: "29637090"
                              abbrev:
                                type: string
                                description: Game abbreviation
                                example: "MLB_20250618_COL@WAS"
                              scheduledTime:
                                type: string
                                description: Game scheduled time in ISO format
                                example: "2025-06-19T00:30:00.000Z"
                              homeTeamScore:
                                type: integer
                                description: Home team final score
                                example: 1
                              awayTeamScore:
                                type: integer
                                description: Away team final score
                                example: 3
                              league:
                                type: object
                                description: League information
                                properties:
                                  id:
                                    type: string
                                    description: League identifier
                                    example: "52"
                                  abbrev:
                                    type: string
                                    description: League abbreviation
                                    example: "MLB"
                          selection:
                            type: object
                            description: Bet selection details
                            properties:
                              label:
                                type: string
                                description: Human-readable bet description
                                example: "Washington -158"
                              marketType:
                                type: string
                                description: Type of bet market
                                example: "MONEY_LINE"
                              odds:
                                type: integer
                                description: American odds
                                example: -158
                              unit:
                                type: number
                                description: Unit size for this selection
                                example: 1
      example:
        data:
          expertPicks:
            __typename: "ExpertPicksConnection"
            totalCount: 3227
            pageInfo:
              startCursor: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcxMTAtUFJPUC1GSVJTVF81X0lOTklOR1NfSEFORElDQVAiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTlUMTc6MDVaIn0="
              endCursor: "eyJfaWQiOiI2N2Y0NmExNy0xYzFmLTRlYjAtODI2MC0zYzAxYzVkOGVhNTQtMjk2MzcwNTgtUFJPUC1UT1RBTF9ISVRTLTI3Njg1NTEiLCJzY2hlZHVsZWREYXRlVGltZSI6IjIwMjUtMDYtMTdUMjI6NDVaIn0="
              hasNextPage: true
              __typename: "PageInfo"
            edges: []
